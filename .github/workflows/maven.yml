name: CI/CD Pipeline to Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 21 for Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Build the project using Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # Step 4: Authenticate Docker to GitHub Container Registry (GHCR)
      - name: Authenticate to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Step 5: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/nethmipathirana/doctor-information-ms:latest .

      # Step 6: Push Docker image to GHCR
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/nethmipathirana/doctor-information-ms:latest

      # Step 7: Ensure the image is public (Optional, only if needed)
      - name: Set image visibility to public
        run: |
          VERSION_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" \
            "https://api.github.com/orgs/NethmiPathirana/packages/container/doctor-information-ms/versions" \
            | jq -r '.[0].id')

          # If version exists, delete it
          if [ "$VERSION_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" \
              "https://api.github.com/orgs/NethmiPathirana/packages/container/doctor-information-ms/versions/$VERSION_ID"
            echo "Deleted existing image version."
          fi

          # Step 8: Push new image again after deletion or if no image found
          docker push ghcr.io/nethmipathirana/doctor-information-ms:latest
          echo "Pushed new Docker image."
